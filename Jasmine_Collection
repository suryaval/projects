{
	"variables": [],
	"info": {
		"name": "describe-it",
		"_postman_id": "122d0a3f-7485-af0b-8863-b0f23ab62c5c",
		"description": "A collection that demonstrate mocha style testing framework in test scripts.",
		"schema": "https://schema.getpostman.com/json/collection/v2.0.0/collection.json"
	},
	"item": [
		{
			"name": "Fetch Testing Framework",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"postman.setGlobalVariable(\"module:describe-it\", responseBody);",
							"try {",
							"    eval(responseBody);",
							"}",
							"catch (e) { }",
							"tests['Framework ready'] = (typeof describe === 'function');"
						]
					}
				}
			],
			"request": {
				"url": "https://gist.githubusercontent.com/shamasis/f9eb2cb3c09f6dd3042f/raw/35bc97d25e15e3ae22017a91df655da0bd0751b5/describe-it.min.js",
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"description": ""
					}
				],
				"body": {},
				"description": ""
			},
			"response": []
		},
		{
			"name": "Response JSON Check (Passes)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"eval(postman.getGlobalVariable(\"module:describe-it\"));",
							"",
							"describe (\"response\", function () {",
							"    var responseJSON;",
							"    ",
							"    it (\"must be a valid JSON\", function () {",
							"      responseJSON = JSON.parse(responseBody);",
							"      expect(typeof responseJSON).toBe('object');",
							"    });",
							"    ",
							"    describe(\"json\", function () {",
							"        it(\"must not have error object\", function () {",
							"          expect(responseJSON.args.error).toNotBeOk();",
							"        });",
							"        ",
							"        it(\"must have a message\", function () {",
							"          expect(responseJSON.args.message).toBeOk();",
							"        });",
							"    });",
							"});"
						]
					}
				}
			],
			"request": {
				"url": "http://dump.getpostman.com/get?message=hi",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "This request expects a JSON response with a specific content in it."
			},
			"response": []
		},
		{
			"name": "Response JSON Check (Fails)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"eval(postman.getGlobalVariable(\"module:describe-it\"));",
							"",
							"describe (\"response\", function () {",
							"    var responseJSON;",
							"    ",
							"    it (\"must be a valid JSON\", function () {",
							"      responseJSON = JSON.parse(responseBody);",
							"      expect(typeof responseJSON).toBe('object');",
							"    });",
							"    ",
							"    describe(\"json\", function () {",
							"        it(\"must not have error object\", function () {",
							"          expect(responseJSON.args.error).toNotBeOk();",
							"        });",
							"        ",
							"        it(\"must have a message\", function () {",
							"          expect(responseJSON.args.message).toBeOk();",
							"        });",
							"    });",
							"});"
						]
					}
				}
			],
			"request": {
				"url": "http://dump.getpostman.com/get?error=yes",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "This request tests whether the response is JSON and if it has a specific content. \nHowever, the response returned fails the checks."
			},
			"response": []
		},
		{
			"name": "Status Code Check (Passes)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"eval(postman.getGlobalVariable(\"module:describe-it\"));",
							"",
							"describe (\"response\", function () {",
							"    it (\"must have html content type header\", function () {",
							"      expect(responseHeaders['Content-Type']).toBe('text/html; charset=utf-8');",
							"    });",
							"    it (\"must return a 200 status code\", function () {",
							"        expect(responseCode.code).toEql(200);     ",
							"    });",
							"});"
						]
					}
				}
			],
			"request": {
				"url": "http://dump.getpostman.com/code/200",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "This request have tests that expect a response with status code `200`."
			},
			"response": []
		},
		{
			"name": "Status Code Check (Fails)",
			"event": [
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"eval(postman.getGlobalVariable(\"module:describe-it\"));",
							"",
							"describe (\"response\", function () {",
							"    it (\"must have html content type header\", function () {",
							"      expect(responseHeaders['Content-Type']).toBe('text/html; charset=utf-8');",
							"    });",
							"    it (\"must return a 200 status code\", function () {",
							"        expect(responseCode.code).toEql(200);     ",
							"    });",
							"});"
						]
					}
				}
			],
			"request": {
				"url": "http://dump.getpostman.com/code/404",
				"method": "GET",
				"header": [],
				"body": {},
				"description": "This request have tests that expect a response with status code `200`. \nHowever, the request returns a `404` and causes the tests to fail."
			},
			"response": []
		}
	]
}
